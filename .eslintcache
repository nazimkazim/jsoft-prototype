[{"D:\\My works\\Portfolio\\jsoft-project-web\\src\\App.tsx":"1","D:\\My works\\Portfolio\\jsoft-project-web\\src\\regions\\index.tsx":"2","D:\\My works\\Portfolio\\jsoft-project-web\\src\\utils.tsx":"3","D:\\My works\\Portfolio\\jsoft-project-web\\src\\regions\\Remove.tsx":"4","D:\\My works\\Portfolio\\jsoft-project-web\\src\\regions\\Update.tsx":"5","D:\\My works\\Portfolio\\jsoft-project-web\\src\\reportWebVitals.ts":"6","D:\\My works\\Portfolio\\jsoft-project-web\\src\\index.tsx":"7","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\Remove.tsx":"8","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\index.tsx":"9","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\data.js":"10","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\Update.tsx":"11","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\Add.tsx":"12"},{"size":359,"mtime":1606143402894,"results":"13","hashOfConfig":"14"},{"size":2724,"mtime":1606143059696,"results":"15","hashOfConfig":"14"},{"size":917,"mtime":1606124708846,"results":"16","hashOfConfig":"14"},{"size":1653,"mtime":1606137550417,"results":"17","hashOfConfig":"14"},{"size":1697,"mtime":1606121257462,"results":"18","hashOfConfig":"14"},{"size":441,"mtime":1606116852586,"results":"19","hashOfConfig":"14"},{"size":524,"mtime":1606116852582,"results":"20","hashOfConfig":"14"},{"size":1667,"mtime":1606203704216,"results":"21","hashOfConfig":"14"},{"size":3554,"mtime":1606204043179,"results":"22","hashOfConfig":"14"},{"size":650,"mtime":1606145987808,"results":"23","hashOfConfig":"14"},{"size":1769,"mtime":1606194539421,"results":"24","hashOfConfig":"14"},{"size":2672,"mtime":1606200276271,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"11xf9gv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"D:\\My works\\Portfolio\\jsoft-project-web\\src\\App.tsx",["55"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n//import Regions from \"./regions\"\r\nimport Sections from './sections'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <Regions/> */}\r\n        <Sections/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\My works\\Portfolio\\jsoft-project-web\\src\\regions\\index.tsx",["56","57","58","59","60","61","62","63","64","65"],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\utils.tsx",[],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\regions\\Remove.tsx",["66","67"],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\regions\\Update.tsx",["68","69"],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\reportWebVitals.ts",[],["70","71"],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\index.tsx",[],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\Remove.tsx",["72","73"],"import React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\n\r\nexport default function Remove(props: any) {\r\n  const {handleDelete, sectionId, type} = props\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Удалить регион</DialogTitle>\r\n        <DialogContent>\r\n          <Typography> Вы уверены, что хотите удалить регион?</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={() => {\r\n            handleDelete(sectionId, type)\r\n            setOpen(false)\r\n            \r\n          }} color=\"primary\">\r\n            Подвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\index.tsx",["74","75","76","77","78","79","80","81"],"import React, { useState, useEffect } from 'react'\r\nimport { Typography, TextField, Box, Button } from \"@material-ui/core\"\r\nimport AddSection from './Add'\r\nimport UpdateSection from './Update'\r\nimport RemoveRegion from './Remove'\r\nimport useAxios, { configure, loadCache, serializeCache } from 'axios-hooks'\r\nimport { SERVER_URL, TOKEN } from \"../utils\";\r\nimport { sections } from './data'\r\n\r\n\r\nconst Sections = () => {\r\n\tconst [{ data, loading, error }, refetch] = useAxios({\r\n\t\turl: SERVER_URL + '/api/v1/location',\r\n\t\tmethod: \"GET\",\r\n\t\theaders: { \"Authorization\": TOKEN, }\r\n\t})\r\n\r\n\tconst [_sections, setSections] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSections(sections)\r\n\t}, [sections])\r\n\r\n\tif (loading) {\r\n\t\treturn <p>loading...</p>\r\n\t}\r\n\tif (error) {\r\n\t\treturn <p>Error, maybe not authorized</p>\r\n\t}\r\n\r\n\tconsole.log(_sections);\r\n\r\n\tconst handleAdd = (section: { id: number, section_name: string, children: { id: number; section_name: string; }[]; }, type, item, name) => {\r\n\r\n\t\tconst randId = Math.floor(Math.random() * (10000 - 1)) + 1;\r\n\t\tconsole.log(type);\r\n\t\tif (type === 'parent') {\r\n\t\t\tconst sectionsArr = [..._sections]\r\n\t\t\tsectionsArr.push(section)\r\n\t\t\tsetSections(sectionsArr)\r\n\t\t}\r\n\r\n\t\tif (type === 'child') {\r\n\t\t\tlet newSections = [...sections]\r\n\t\t\tnewSections.forEach((section) => {\r\n\t\t\t\tif (section.id === item.id) {\r\n\t\t\t\t\tconsole.log('true');\r\n\t\t\t\t\tsection.children.push({\r\n\t\t\t\t\t\tid: randId, section_name: name\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tsetSections(newSections)\r\n\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst handleUpdate = (item, value, type) => {\r\n\t\t// check type of section\r\n\t\tif (type === 'parent') {\r\n\t\t\tlet newSections = [..._sections].map((section) => {\r\n\t\t\t\t// check if section.id equals to item.id (selected item)\r\n\t\t\t\tif (section.id === item.id) {\r\n\t\t\t\t\t// modify propery of the selected item if true\r\n\t\t\t\t\treturn Object.assign({}, item, { section_name: value });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn section\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsetSections(newSections)\r\n\t\t}\r\n\r\n\t\tif (type === 'child') {\r\n\t\t\tlet newSections = [..._sections]\r\n\t\t\tnewSections.forEach((section) => {\r\n\t\t\t\tsection.children.forEach((child) => {\r\n\t\t\t\t\tif (child.id === item.id) {\r\n\t\t\t\t\t\tchild.section_name = value\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetSections(newSections)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDelete = (type: string, id: string) => {\r\n\t\tif (type === 'parent') {\r\n\t\t\tconsole.log('true');\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<AddSection handleSubmit={handleAdd} type=\"parent\" />\r\n\t\t\t<br />\r\n\t\t\t{_sections && _sections.map((section: any, index: any) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Box key={index} style={{ borderBottom: \"2px solid black\" }}>\r\n\t\t\t\t\t\t<Box display={\"flex\"} alignItems={\"center\"}>\r\n\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t{index + 1} - {section && section.section_name}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<AddSection level={1} handleSubmit={handleAdd} type=\"child\" item={section} />\r\n\t\t\t\t\t\t\t<UpdateSection handleUpdate={handleUpdate} section={section} type=\"parent\" />\r\n\t\t\t\t\t\t\t<RemoveRegion sectionId={section?.id} handleDelete={handleDelete} type=\"parent\" />\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsection.children && section.children.map((child) => (\r\n\t\t\t\t\t\t\t\t<Box display={\"flex\"} alignItems={\"center\"} style={{ paddingLeft: 40 }}>\r\n\t\t\t\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\t\t\t\t{child.section_name}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<UpdateSection handleUpdate={handleUpdate} section={child} type=\"child\" />\r\n\t\t\t\t\t\t\t\t\t<RemoveRegion regionId={child.id} handleDelete={() => handleDelete('area1', child.id)} />\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default Sections\r\n","D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\data.js",[],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\Update.tsx",["82"],"D:\\My works\\Portfolio\\jsoft-project-web\\src\\sections\\Add.tsx",["83","84","85","86","87","88","89","90","91","92","93"],"import React, { useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useAxios from \"axios-hooks\";\r\nimport { generateLocationPOSTData, SERVER_URL, TOKEN } from \"../utils\";\r\nimport {IconButton, Box} from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { YMaps, Placemark, Map } from 'react-yandex-maps';\r\n\r\nexport default function Add(props:any){\r\n  const {handleSubmit, type, item} = props\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState(\"\")\r\n  const parentRandId = Math.floor(Math.random() * (10000 - 1)) + 1;\r\n  const childRandId = Math.floor(Math.random() * (10000 - 1)) + 1;\r\n\r\n  const [{ data, loading, error }, execute]  = useAxios({\r\n    url:SERVER_URL + '/api/v1/location',\r\n    method: \"POST\",\r\n    headers: { \"Authorization\": TOKEN, },\r\n    // baseUrl: \"\"\r\n  },{ manual: true })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleApiLoaded = (map:any, maps:any) => {\r\n    console.log(map, maps)\r\n  };\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <AddIcon />\r\n      </IconButton>\r\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>*/}\r\n      {/*  Добавить*/}\r\n      {/*</Button>*/}\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth={\"md\"} fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">Добавить регион</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Регион\"\r\n            type=\"email\"\r\n            onChange={e => setValue(e.target.value)}\r\n            value={value}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button color=\"primary\" onClick={e => {\r\n            handleSubmit({ id: parentRandId, section_name: value, children:[{id:childRandId, section_name:null}] },type, item, value)\r\n            setOpen(false);\r\n          }}>\r\n            Подвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"99","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":31},{"ruleId":"94","severity":1,"message":"100","line":2,"column":38,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"94","severity":1,"message":"101","line":6,"column":20,"nodeType":"96","messageId":"97","endLine":6,"endColumn":29},{"ruleId":"94","severity":1,"message":"102","line":6,"column":31,"nodeType":"96","messageId":"97","endLine":6,"endColumn":40},{"ruleId":"94","severity":1,"message":"103","line":6,"column":42,"nodeType":"96","messageId":"97","endLine":6,"endColumn":56},{"ruleId":"94","severity":1,"message":"104","line":12,"column":35,"nodeType":"96","messageId":"97","endLine":12,"endColumn":42},{"ruleId":"94","severity":1,"message":"105","line":32,"column":8,"nodeType":"96","messageId":"97","endLine":32,"endColumn":20},{"ruleId":"94","severity":1,"message":"106","line":33,"column":9,"nodeType":"96","messageId":"97","endLine":33,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":41,"column":27,"nodeType":"109","messageId":"110","endLine":41,"endColumn":29},{"ruleId":"94","severity":1,"message":"99","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"111","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"111","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"112","line":14,"column":10,"nodeType":"96","messageId":"97","endLine":14,"endColumn":22},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"94","severity":1,"message":"99","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":17},{"ruleId":"94","severity":1,"message":"111","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"99","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":31},{"ruleId":"94","severity":1,"message":"100","line":2,"column":38,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"94","severity":1,"message":"101","line":6,"column":20,"nodeType":"96","messageId":"97","endLine":6,"endColumn":29},{"ruleId":"94","severity":1,"message":"102","line":6,"column":31,"nodeType":"96","messageId":"97","endLine":6,"endColumn":40},{"ruleId":"94","severity":1,"message":"103","line":6,"column":42,"nodeType":"96","messageId":"97","endLine":6,"endColumn":56},{"ruleId":"94","severity":1,"message":"117","line":12,"column":11,"nodeType":"96","messageId":"97","endLine":12,"endColumn":15},{"ruleId":"94","severity":1,"message":"104","line":12,"column":35,"nodeType":"96","messageId":"97","endLine":12,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":22,"column":5,"nodeType":"120","endLine":22,"endColumn":15,"suggestions":"121"},{"ruleId":"94","severity":1,"message":"111","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"111","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"122","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":34},{"ruleId":"94","severity":1,"message":"123","line":11,"column":21,"nodeType":"96","messageId":"97","endLine":11,"endColumn":24},{"ruleId":"94","severity":1,"message":"124","line":13,"column":10,"nodeType":"96","messageId":"97","endLine":13,"endColumn":15},{"ruleId":"94","severity":1,"message":"125","line":13,"column":17,"nodeType":"96","messageId":"97","endLine":13,"endColumn":26},{"ruleId":"94","severity":1,"message":"126","line":13,"column":28,"nodeType":"96","messageId":"97","endLine":13,"endColumn":31},{"ruleId":"94","severity":1,"message":"117","line":22,"column":12,"nodeType":"96","messageId":"97","endLine":22,"endColumn":16},{"ruleId":"94","severity":1,"message":"127","line":22,"column":18,"nodeType":"96","messageId":"97","endLine":22,"endColumn":25},{"ruleId":"94","severity":1,"message":"128","line":22,"column":27,"nodeType":"96","messageId":"97","endLine":22,"endColumn":32},{"ruleId":"94","severity":1,"message":"129","line":22,"column":36,"nodeType":"96","messageId":"97","endLine":22,"endColumn":43},{"ruleId":"94","severity":1,"message":"130","line":36,"column":9,"nodeType":"96","messageId":"97","endLine":36,"endColumn":24},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'configure' is defined but never used.","'loadCache' is defined but never used.","'serializeCache' is defined but never used.","'refetch' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","'regionsArr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DialogContentText' is defined but never used.","'handleSubmit' is assigned a value but never used.","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'sections'. Either exclude it or remove the dependency array. Outer scope values like 'sections' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["133"],"'generateLocationPOSTData' is defined but never used.","'Box' is defined but never used.","'YMaps' is defined but never used.","'Placemark' is defined but never used.","'Map' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'execute' is assigned a value but never used.","'handleApiLoaded' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: []",{"range":"136","text":"137"},[683,693],"[]"]